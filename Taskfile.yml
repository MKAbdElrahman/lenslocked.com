version: '3'

env:
  BIN_DIR: bin
  COVERAGE_REPORTS_DIR: reports
tasks:

  install-go:
    desc: Download Go, install it, and add it to the PATH. Requires sudo.
    cmds:
      - wget "https://go.dev/dl/go$GO_VERSION.linux-amd64.tar.gz"
      - sudo rm -rf $GO_INSTALL_DIR/go
      - sudo tar -C $GO_INSTALL_DIR -xzf go$GO_VERSION.linux-amd64.tar.gz
      - echo 'export PATH=$PATH:/usr/local/go/bin' >> $HOME/.bashrc
      - echo 'export GOPATH=$HOME/go' >> $HOME/.bashrc
      - echo 'export PATH=$PATH:$GOPATH/bin' >> $HOME/.bashrc
      - echo 'export GO111MODULE=on' >> $HOME/.bashrc
      - rm go$GO_VERSION.linux-amd64.tar.gz
      - go version
    env:
      GO_VERSION: 1.21.1
      GO_INSTALL_DIR: /usr/local
  install-gotestdox:
    desc: Install gotestdox
    cmds:
      - go install github.com/bitfield/gotestdox/cmd/gotestdox@latest
  install-errcheck:
    desc: Install errcheck
    cmds:
      - go install github.com/kisielk/errcheck@latest
  test:
    desc: Run all tests with coverage
    cmds:
      - mkdir -p $COVERAGE_REPORTS_DIR
      - go test ./... -coverprofile=$COVERAGE_REPORTS_DIR/coverage.out


  gotestdox:
    desc: Formats Go test results as readable documentation
    deps: [install-gotestdox]
    cmds:
      - gotestdox ./...
  errcheck:
    desc: Check for unchecked errors
    deps: [install-errcheck]
    cmds:
      - errcheck ./...
  # coverage-check:
  #   desc: Check that coverage is above a threshold
  #   deps: [test]
  #   cmds:
  #     - go tool cover -func=$COVERAGE_REPORTS_DIR/coverage.out | grep total | awk '{print $3}' | awk -F. '{print $1}' | xargs -I{} test {} -ge $COVERAGE_THRESHOLD || (echo "Coverage is below threshold of $COVERAGE_THRESHOLD" && exit 1)
  #   env:
  #     COVERAGE_THRESHOLD: 50
  generate-coverage-report:
    desc: Generate a coverage report in HTML
    deps: [test]
    cmds:
      - go tool cover -html=$COVERAGE_REPORTS_DIR/coverage.out -o $COVERAGE_REPORTS_DIR/coverage.html
  check-format:
    desc: Check code formatting
    cmds:
      - go fmt ./...
  build:
    desc: Build the application
    cmds:
      - mkdir -p $BIN_DIR
      - go build -o $BIN_DIR/lenslocked ./cmd/server/main.go
  run:
    desc: Run the application
    deps: [build]
    cmds:
      - $BIN_DIR/lenslocked
  clean:
    desc: Remove all generated files
    cmds:
      - rm -rf $BIN_DIR
      - rm -rf $COVERAGE_REPORTS_DIR
